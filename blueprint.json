{
  "schema": {
    "type": "service_blueprint",
    "version": {
      "major": 0,
      "minor": 1
    },
    "origin": "Engines Developer Studio 0.2"
  },
  "metadata": {
    "blueprint": {
      "version": {
        "major": 0,
        "minor": 0,
        "level": "alpha",
        "patch": 0
      }
    },
    "software": {
      "display": {
        "title": "Ipsec vpn",
        "label": "ipsec"
      }
    },
    "timestamp": "2018-03-31T13:31:59+11:00"
  },
  "software": {
    "base": {
      "name": "ipsec",
      "publisher_namespace": "EnginesSystem",
      "type_path": "vpn/ivpn",
      "service_handle_field": "vpn_name",
      "parent_image": "engines/servicebase",
      "deployment_type": "worker",
      "memory": {
        "required": 96,
        "recommended": 96
      },
      "run_as_user": "ivpn"
    },
    "constants": [
      {
        "name": "backup_support",
        "value": "true"
      }
    ],
    "actionators": [
      {
        "name": "add_site_vpn",
        "label": "add site vpn",
        "return_type": "json",
        "variables": [
          {
            "name": "vpn_name",
            "mandatory": true,
            "input": {
              "type": "string"
            }
          },
          {
            "name": "remote_site",
            "mandatory": true,
            "input": {
              "type": "string",
              "label": "remote_endpoint",
              "hint": "x.x.x.x"
            }
          },
          {
            "name": "remote_lan",
            "mandatory": true,
            "input": {
              "type": "string",
              "label": "Remote  lan"
            }
          },
          {
            "name": "remote_subnet",
            "mandatory": true,
            "input": {
              "type": "string",
              "label": "remote subnet"
            }
          },
          {
            "name": "remote_id",
            "input": {
              "type": "string"
            }
          },
          {
            "name": "ike_version",
            "input": {
              "type": "select",
              "collection": {
                "items": {
                  "ikev1": "IKEv1",
                  "ikev2": "IKv2"
                }
              }
            }
          },
          {
            "name": "my_id",
            "input": {
              "type": "string",
              "label": "My ID"
            }
          },
          {
            "name": "psk",
            "value": "_Engines_System(random(64))",
            "mandatory": true,
            "input": {
              "type": "string",
              "label": "Pre Shared Key"
            }
          },
          {
            "name": "phase1_enc_al",
            "mandatory": true,
            "input": {
              "type": "select",
              "label": "Phase 1 Encryption Algorithm",
              "collection": {
                "items": {
                  "aes256": "AES256",
                  "aes128": "AES128",
                  "aes192": "AES192",
                  "3DES": "3DES"
                }
              }
            }
          },
          {
            "name": "phase1_hash",
            "mandatory": true,
            "input": {
              "type": "select",
              "label": "Phase 1 Hash Algorithm",
              "collection": {
                "items": {
                  "sha1": "SHA1",
                  "sha256": "SHA256",
                  "sha384": "SHA384"
                }
              }
            }
          },
          {
            "name": "phase1_dh_group",
            "mandatory": true,
            "input": {
              "type": "select",
              "label": " DH Group",
              "collection": {
                "items": {
                  "dhgroup2": "2 (1024 bit)",
                  "dhgroup5": "5 (1563 bit)",
                  "dhgroup14": "14 (2048 bit)",
                  "dhgrop15": "15 (3072 bit)"
                }
              }
            }
          },
          {
            "name": "disable_rekey ",
            "value": "false",
            "input": {
              "type": "boolean",
              "label": "Disable rekey"
            }
          },
          {
            "name": "respond_only",
            "value": "false",
            "input": {
              "type": "boolean",
              "title": "Respond Only"
            }
          },
          {
            "name": "nat_t",
            "value": "false",
            "input": {
              "type": "boolean",
              "label": "Force Nat Traversal"
            }
          },
          {
            "name": "dpd",
            "value": "true",
            "input": {
              "type": "boolean",
              "label": "Dead peer detection"
            }
          },
          {
            "name": "dpd_delay",
            "input": {
              "type": "integer",
              "label": "Dead Peer Detection Delay"
            }
          },
          {
            "name": "dpd_max",
            "input": {
              "type": "integer",
              "title": "Max failures"
            }
          },
          {
            "name": "dpd_action",
            "input": {
              "type": "select",
              "collection": {
                "items": {
                  "restart": "restart",
                  "clear": "clear"
                }
              }
            }
          },
          {
            "name": "ike_life",
            "value": "36000",
            "input": {
              "type": "integer",
              "label": "IKE key lifetime"
            }
          },
          {
            "name": "phase2_enc_al",
            "mandatory": true,
            "input": {
              "type": "select",
              "label": "Phase 2 Encryption",
              "collection": {
                "items": {
                  "aes": "AES",
                  "3des": "3DES"
                }
              }
            }
          },
          {
            "name": "phase2_hash",
            "mandatory": true,
            "input": {
              "type": "select",
              "label": "Phase 2 Hash Algorithm",
              "collection": {
                "items": {
                  "sha1": "SHA1",
                  "sha256": "SHA256",
                  "sha384": "SHA384"
                }
              }
            }
          },
          {
            "name": "pfs",
            "value": "off",
            "input": {
              "type": "select",
              "title": "PFS Group",
              "collection": {
                "items": {
                  "off": "off",
                  "1": "1 (768 bit)",
                  "2": "2 (1024 bit)",
                  "5": "5 (1536 bit)",
                  "14": "14 (2048 bit)"
                }
              }
            }
          },
          {
            "name": "sa_life",
            "value": "3600",
            "input": {
              "type": "integer",
              "label": "SA lifetime"
            }
          }
        ],
        "script": {
          "language": "sh"
        }
      },
      {
        "name": "rm_vpn",
        "label": "Remove VPN",
        "return_type": "none",
        "variables": [
          {
            "name": "vpn_name",
            "mandatory": true,
            "input": {
              "type": "string"
            }
          }
        ]
      },
      {
        "name": "vpn_status",
        "return_type": "json",
        "variables": [
          {
            "name": "vpn_name",
            "input": {
              "type": "string",
              "placeholder": "optional lists all without"
            }
          }
        ]
      },
      {
        "name": "stop_vpn",
        "label": "Stop VPN",
        "return_type": "none",
        "variables": [
          {
            "name": "vpn_name",
            "mandatory": true,
            "input": {
              "type": "string"
            }
          }
        ]
      },
      {
        "name": "start_vpn",
        "label": "Start Vpn",
        "return_type": "json",
        "variables": [
          {
            "name": "vpn_name",
            "mandatory": true,
            "input": {
              "type": "string"
            }
          }
        ]
      },
      {
        "name": "disable_vpn",
        "label": "Disable vpn",
        "return_type": "json",
        "variables": [
          {
            "name": "vpn_name",
            "input": {
              "type": "string",
              "label": "VPN name"
            }
          }
        ]
      },
      {
        "name": "list_vpns",
        "label": "List VPNs",
        "return_type": "json"
      },
      {
        "name": "add_user_vpn",
        "label": "Add VPN user",
        "return_type": "json",
        "enable_logging": true,
        "variables": [
          {
            "name": "vpn_name",
            "mandatory": true,
            "input": {
              "type": "string",
              "label": "Username",
              "validation": {
                "pattern": "^[a-zA-Z]+$"
              }
            }
          },
          {
            "name": "password",
            "mandatory": true,
            "input": {
              "type": "password_with_confirmation",
              "label": "Password"
            }
          }
        ],
        "script": {
          "language": "sh",
          "content": "#!/bin/bash\r\n\r\nfunction add_user_vpn {\r\n\r\npassword=`echo -n \"${password}\" | iconv -t utf16le | openssl md4`\r\n\r\n #echo \"${vpn_name} : EAP \\\"${password}\\\"\" > /home/ivpn/entries/user/${vpn_name}\r\n echo \"${vpn_name} : NTLM \\\"${password}\\\"\" > /home/ivpn/entries/user/${vpn_name}\r\n echo \"\" >> /home/ivpn/entries/user/${vpn_name}\r\n\r\n}\r\n\r\n. /home/engines/functions/params_to_env.sh\r\nparams_to_env\r\n\r\n\r\nrequired_values=\"vpn_name password\"\r\ncheck_required_values\r\n\r\nif ! test -f /home/ivpn/entries/user/${vpn_name}\r\n then\r\n   echo '{\"result\":\"VPN User Exists '${vpn_name}'\"}'\r\n   exit 2\r\nfi\r\n    \r\nadd_user_vpn\r\n\r\nerr=`sudo -n /home/engines/scripts/configurators/_add_user_vpn.sh`\r\nif test $? -eq 0\r\n then\r\n\techo '{\"result\":\"Success\"}'\r\n\texit 0\r\nelse\r\n \techo '{\"result\":\"'$err'\"}'\r\n\texit 2\r\nfi\r\n\t\r\n"
        },
        "script_sudo": {
          "language": "sh",
          "content": "#!/bin/sh\r\n\r\n/home/engine/scripts/engine/build_secrets.sh\r\n"
        }
      },
      {
        "name": "disable_user_vpn",
        "label": "Disable User",
        "return_type": "json",
        "variables": [
          {
            "name": "vpn_name",
            "input": {
              "type": "string",
              "validation": {
                "pattern": "^[a-zA-Z]+$"
              }
            }
          }
        ],
        "script": {
          "language": "sh",
          "content": "#!/bin/bash\r\n\r\n. /home/engines/functions/params_to_env.sh\r\nparams_to_env\r\n\r\n\r\nrequired_values=\"vpn_name\"\r\ncheck_required_values\r\n\r\nif ! test -f /home/ivpn/entries/user/${vpn_name}\r\n then\r\n   echo \"No Such VPN ${vpn_name}\"\r\n   exit 2\r\nfi\r\n\r\nif ! test -d  /home/ivpn/entries/disabled_users/\r\n then\r\n  mkdir -p /home/ivpn/entries/disabled_users/\r\nfi  \r\n\r\nmv /home/ivpn/entries/user/${vpn_name} /home/ivpn/entries/disabled_users/\r\nsudo -n /home/engines/scripts/configurators/_disable_user_vpn.sh"
        },
        "script_sudo": {
          "language": "sh",
          "content": "#!/bin/sh\r\n/home/engine/scripts/engine/build_secrets.sh\r\n"
        }
      },
      {
        "name": "list_vpn_users",
        "label": "List VPN users",
        "return_type": "json",
        "script": {
          "language": "sh",
          "content": "#!/bin/sh\r\n\r\necho '{\"Enabled\":['\r\nusers=`ls /home/ivpn/entries/user/`\r\nn=0\r\nfor user  in $users\r\n do\r\n    if test $n -ne 0\r\n     then\r\n      echo -n ','\r\n    else\r\n      n=1\r\n    fi    \r\n  echo =n '\"'$user'\"' \t\r\n done\r\n \r\necho '],\"Disabled\":[' \r\n\r\ndisabled_users=`ls /home/ivpn/entries/disabled_users/`\r\nn=0\r\nfor user  in $disabled_users\r\n do\r\n    if test $n -ne 0\r\n     then\r\n      echo -n ','\r\n    else\r\n      n=1\r\n    fi    \r\n  echo =n '\"'$user'\"' \t\r\n done\r\n echo ']}'"
        }
      },
      {
        "name": "rm_user_vpn",
        "label": "Remove VPN user",
        "return_type": "json",
        "enable_logging": true,
        "variables": [
          {
            "name": "vpn_name",
            "mandatory": true,
            "input": {
              "type": "string",
              "label": "Username",
              "validation": {
                "pattern": "^[a-zA-Z]+$"
              }
            }
          }
        ],
        "script": {
          "language": "sh",
          "content": "#!/bin/bash\r\n. /home/engines/functions/params_to_env.sh\r\nparams_to_env\r\n\r\n\r\nif ! test -f /home/ivpn/entries/user/${vpn_name}\r\n then\r\n   echo '{\"result\":\"No Such VPN '${vpn_name}'\"'\r\n   exit 2\r\nfi\r\n\r\nrm /home/ivpn/entries/user/${vpn_name}\r\n \r\n\r\nsudo -n /home/engines/scripts/configurators/_rm_user_vpn.sh\r\nif test $? -eq 0\r\n then\r\n\techo '{\"result\":\"Success\"}'\r\n\texit 0\r\nelse\r\n \techo '{\"result\":\"'$err'\"}'\r\n\texit 2\r\nfi"
        }
      },
      {
        "name": "set_vpn_user_pass",
        "label": "Set VPN user password",
        "return_type": "json",
        "variables": [
          {
            "name": "vpn_name",
            "mandatory": true,
            "input": {
              "type": "string",
              "label": "Username",
              "validation": {
                "pattern": "^[a-zA-Z]+$"
              }
            }
          },
          {
            "name": "password",
            "input": {
              "type": "password_with_confirmation",
              "label": "Password"
            }
          }
        ]
      },
      {
        "name": "enable_vpn_user",
        "label": "Enable VPN user",
        "return_type": "json",
        "variables": [
          {
            "name": "vpn_name",
            "mandatory": true,
            "input": {
              "type": "string",
              "label": "Username",
              "validation": {
                "pattern": "^[a-zA-Z]+$"
              }
            }
          }
        ]
      }
    ],
    "configurators": [
      {
        "name": "enable_user_vpn",
        "label": "Add user VPN",
        "enable_logging": true,
        "variables": [
          {
            "name": "enable_user_vpn",
            "value": "false",
            "mandatory": true,
            "input": {
              "type": "boolean"
            }
          }
        ],
        "set_script": {
          "language": "sh",
          "content": "#!/bin/bash\r\n\r\n. /home/engines/functions/params_to_env.sh\r\nparams_to_env\r\n\r\n\r\nrequired_values=\"enable_user_vpn\"\r\ncheck_required_values\r\n\r\nif $test enable_user_vpn = true\r\n then\r\n     touch /home/ivpn/entries/user/\r\n else\r\n      rm /home/ivpn/entries/user/\r\nfi\r\n\r\necho \"Success\"\r\nexit 0\r\n"
        }
      }
    ]
  }
}
